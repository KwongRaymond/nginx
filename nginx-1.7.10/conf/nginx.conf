# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

#user  nobody;
worker_processes  auto;
worker_rlimit_nofile 100000;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
    multi_accept on;
    #Only on Linux 2.6+ 
	#use epoll;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

	#Access Log Settings
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
	#access_log  /var/log/nginx/access.log main buffer=32k flush=5m;
	map $status $loggable {
		~^[23]  0;
		default 1;
	}
	access_log  logs/access.log main buffer=32k flush=5m if=$loggable;

	#Error Log Settings
	error_log  logs/error.log  warn;

    sendfile        on;
	tcp_nopush     on;
	reset_timedout_connection on;

    #keepalive_timeout  0;
	keepalive_timeout  65;

	#Cache Settings
	#proxy_cache_path /etc/nginx/cache levels=1:2 keys_zone=mycache:10m max_size=50m inactive=1d;
	#proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";
	#proxy_cache_valid 200 302 1d;
	#proxy_cache_bypass $http_cache_control;
	
	#gzip settings
	gzip on;
	gzip_disable "MSIE [1-6]\.(?!.*SV1)";
	gzip_proxied no-store no-cache private expired auth;
	gzip_vary on;
	gzip_min_length 256;
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
	gzip_comp_level 4;
	
	#Proxy Settings
	proxy_redirect off;
	proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;
	proxy_read_timeout 5s;
	proxy_connect_timeout 2s;
	
	#Proxy Buffers
	proxy_buffering on;
	proxy_buffer_size 128k;
	proxy_buffers 64 128k;
	
	#Proxy Headers
	proxy_set_header Host $http_host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto $scheme;
	
	upstream myapp1 {
		ip_hash;
		server 127.0.0.1:7030;
		server 127.0.0.1:7032;
    }
	
    server {
		listen       80;
        server_name  localhost;
		
		#No Caching for the custom css
		#location ~ /default/css/sp/site([0-9]+)\.css$ {
		#	proxy_pass http://myapp1;
		#	access_log off;
		#}
		#Cache the static resources on the Nginx Server
		#location ~ /default {
		#	proxy_pass http://myapp1;
		#	access_log off;
			#access_log log/static.log main buffer=32k flush=5m;
		#	add_header X-Proxy-Cache $upstream_cache_status;
		#	add_header Cache-Control "public";
		#	proxy_cache mycache;
		#	expires 5d;			
		#}	
		error_page 502 504 /403.html;
		location = /403.html {
           root   html;
           internal;
		}
		
		#Redirect User to Https Page
		#location ~ /(signup|login)$ {
		#	return 301 https://$host:7443$request_uri;
		#}
		#Redirect User to Https Login Page
		#location ~ /([a-z0-9_]+)\/main$ {
		#	return 301 https://$host:7443/$1/login;
		#}
		#Default
		location / {
			proxy_pass http://myapp1;
			#add_header X-Proxy-Cache $upstream_cache_status;
		}
	}

	server {
		listen       443 ssl;
        server_name  localhost;

	    ssl_certificate      server.crt;
        ssl_certificate_key  server.key;

		#ssl_session_cache    shared:SSL:10m;
		#ssl_session_timeout  10m;

        #ssl_ciphers  HIGH:!aNULL:!MD5;
		ssl_prefer_server_ciphers  on;
		add_header Front-End-Https on;		

		#No Caching for the custom css
		#location ~ /default/css/sp/site([0-9]+)\.css$ {
		#	proxy_pass http://myapp1;
		#	access_log off;
		#}
		#Cache the static resources on the Nginx Server
		#location ~ /default {
		#	proxy_pass http://myapp1;
		#	#access_log log/static.log main buffer=32k flush=5m;
		#	access_log off;
		#	add_header X-Proxy-Cache $upstream_cache_status;
		#	add_header Cache-Control "public";
		#	proxy_cache mycache;
		#	expires 5d;
		#}
		error_page 403 503 504 502 /403.html;
		location = /403.html {
           root   html;
           allow all;
		}
		#Default
        location / {
            proxy_pass http://myapp1;
        }
    }
}
